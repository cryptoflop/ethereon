import * as babel from "@babel/core";
import * as t from "@babel/types";
interface Options {
    bundler?: "esm" | "standard" | "vite" | "webpack5";
    fixRender?: boolean;
}
type ImportHook = Map<string, t.Identifier>;
interface ImportIdentifiers {
    identifiers: Map<t.Identifier, ImportIdentity>;
    namespaces: Map<t.Identifier, ImportIdentity>;
}
interface State extends babel.PluginPass {
    hooks: ImportHook;
    opts: Options;
    processed: boolean;
    granular: boolean;
    imports: ImportIdentifiers;
}
interface ImportIdentity {
    name: string;
    source: string;
}
export default function solidRefreshPlugin(): babel.PluginObj<State>;
export {};
